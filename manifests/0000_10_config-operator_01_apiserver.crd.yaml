apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apiservers.config.openshift.io
spec:
  group: config.openshift.io
  scope: Cluster
  names:
    kind: APIServer
    singular: apiserver
    plural: apiservers
    listKind: APIServerList
  versions:
  - name: v1
    served: true
    storage: true
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: APIServer holds configuration (like serving certificates, client
        CA and CORS domains) shared by all API servers in the system, among them especially
        kube-apiserver and openshift-apiserver. The canonical name of an instance
        is 'cluster'.
      type: object
      required:
      - spec
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
          properties:
            additionalCORSAllowedOrigins:
              description: additionalCORSAllowedOrigins lists additional, user-defined
                regular expressions describing hosts for which the API server allows
                access using the CORS headers. This may be needed to access the API
                and the integrated OAuth server from JavaScript applications. The
                values are regular expressions that correspond to the Golang regular
                expression language.
              type: array
              items:
                type: string
            clientCA:
              description: 'clientCA references a ConfigMap containing a certificate
                bundle for the signers that will be recognized for incoming client
                certificates in addition to the operator managed signers. If this
                is empty, then only operator managed signers are valid. You usually
                only have to set this if you have your own PKI you wish to honor client
                certificates from. The ConfigMap must exist in the openshift-config
                namespace and contain the following required fields: - ConfigMap.Data["ca-bundle.crt"]
                - CA bundle.'
              type: object
              required:
              - name
              properties:
                name:
                  description: name is the metadata.name of the referenced config
                    map
                  type: string
            encryption:
              description: encryption allows the configuration of encryption of resources
                at the datastore layer.
              type: object
              properties:
                type:
                  description: "type defines what encryption type should be used to
                    encrypt resources at the datastore layer. When this field is unset
                    (i.e. when it is set to the empty string), identity is implied.
                    The behavior of unset can and will change over time.  Even if
                    encryption is enabled by default, the meaning of unset may change
                    to a different encryption type based on changes in best practices.
                    \n When encryption is enabled, all sensitive resources shipped
                    with the platform are encrypted. This list of sensitive resources
                    can and will change over time.  The current authoritative list
                    is: \n   1. secrets   2. configmaps   3. routes.route.openshift.io
                    \  4. oauthaccesstokens.oauth.openshift.io   5. oauthauthorizetokens.oauth.openshift.io"
                  type: string
                  enum:
                  - ""
                  - identity
                  - aescbc
            servingCerts:
              description: servingCert is the TLS cert info for serving secure traffic.
                If not specified, operator managed certificates will be used for serving
                secure traffic.
              type: object
              properties:
                namedCertificates:
                  description: namedCertificates references secrets containing the
                    TLS cert info for serving secure traffic to specific hostnames.
                    If no named certificates are provided, or no named certificates
                    match the server name as understood by a client, the defaultServingCertificate
                    will be used.
                  type: array
                  items:
                    description: APIServerNamedServingCert maps a server DNS name,
                      as understood by a client, to a certificate.
                    type: object
                    properties:
                      names:
                        description: names is a optional list of explicit DNS names
                          (leading wildcards allowed) that should use this certificate
                          to serve secure traffic. If no names are provided, the implicit
                          names will be extracted from the certificates. Exact names
                          trump over wildcard names. Explicit names defined here trump
                          over extracted implicit names.
                        type: array
                        items:
                          type: string
                      servingCertificate:
                        description: 'servingCertificate references a kubernetes.io/tls
                          type secret containing the TLS cert info for serving secure
                          traffic. The secret must exist in the openshift-config namespace
                          and contain the following required fields: - Secret.Data["tls.key"]
                          - TLS private key. - Secret.Data["tls.crt"] - TLS certificate.'
                        type: object
                        required:
                        - name
                        properties:
                          name:
                            description: name is the metadata.name of the referenced
                              secret
                            type: string
        status:
          type: object
